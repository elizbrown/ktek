#!/usr/bin/env node

var program = require('commander'),
    ncp = require('ncp').ncp,
    marked = require('marked'),
    mustache = require('mustache'),
    fs = require('fs'),
    path = require('path');

// Synchronous highlighting with highlight.js
marked.setOptions({
  highlight: function (code) {
    return require('highlightjs').highlightAuto(code).value;
  }
});

program
  .version('0.0.1')
  .command('init [name]')
  .description('Create a new empty book project in the current location')
  .action(function (name, options) {
    var templateDir = path.resolve(__dirname, '../templates/default');

    console.log(templateDir);

    ncp(templateDir, "./"+name, function (err) {
      if (err) throw err;
    });
  });

var chapterTemplate = fs.readFileSync(path.resolve(__dirname, '../lib/chapter.mustache.html'), 'utf8');

program
  .command('build')
  .description('Compile the project to Kindle format')
  .action(function (options) {
    fs.readdir('.', function (err, files) {
      files.forEach(function (file) {
        if (file.substring(file.length - 3) === '.md') {
          console.log('Compiling', file, '...');
          fs.readFile(file, 'utf8', function (err, content) {
            var templateData = {
              title: 'Root Scootin Boogie',
              content: marked(content)
            };
            fs.writeFile(file.replace('.md', '.html'), mustache.render(chapterTemplate, templateData), function (err) {
              if (err) throw err;
              console.log('Wrote', file);
            })
          })
        }
      })
    })
  });

program.parse(process.argv);
